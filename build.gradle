plugins {
    id "java"
    id "org.springframework.boot" version "2.3.1.RELEASE"
    id "idea"
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    maven {
        url "https://maven.aliyun.com/repository/public/"
    }
    mavenCentral()
}

dependencies {
    def springVersion = "5.2.5.RELEASE"
    def springBootVersion = "2.3.1.RELEASE"
    def log4j2Version = "2.23.1"
    def jacksonVersion = "2.10.0"
    def powerMockVersion = "2.0.9"
    def jjwtVersion = "0.12.6"
    def poiVersion = "5.2.5"

    annotationProcessor "org.projectlombok:lombok:1.18.12"
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    implementation(
            "org.springframework.boot:spring-boot-starter-log4j2:${springBootVersion}",
            "org.apache.logging.log4j:log4j-api:${log4j2Version}",
            "org.apache.logging.log4j:log4j-core:${log4j2Version}",
            "org.springframework:spring-jdbc:${springVersion}",
            "org.springframework:spring-websocket:${springVersion}",
            "org.projectlombok:lombok:1.18.12",
            "org.mybatis:mybatis:3.5.2",
            "org.mybatis:mybatis-spring:2.0.2",
            "org.postgresql:postgresql:42.2.16",
            "mysql:mysql-connector-java:8.0.16",
            "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}",
            "com.google.code.gson:gson:2.11.0",
            "com.qcloud:cos_api:5.6.225",
            "com.qcloud:cos-sts_api:3.1.0",
            "io.jsonwebtoken:jjwt-api:${jjwtVersion}",
            "org.roaringbitmap:RoaringBitmap:1.2.1",
            "com.esotericsoftware:kryo:5.6.0",
            "org.apache.poi:poi:${poiVersion}",
            "org.apache.poi:poi-ooxml:${poiVersion}",
    )
    runtimeOnly(
            "io.jsonwebtoken:jjwt-impl:${jjwtVersion}",
            "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
    )
    testImplementation(
            "junit:junit:4.12",
            "org.mockito:mockito-core:2.28.2",
            "org.powermock:powermock-module-junit4:${powerMockVersion}",
            "org.powermock:powermock-api-mockito2:${powerMockVersion}"
    )
    // modules {
    //     module("org.springframework.boot:spring-boot-starter-logging") {
    //         replacedBy("org.springframework.boot:spring-boot-starter-log4j2", "Use Log4j2 instead of Logback")
    //     }
    // }
}

jar {
    manifest {
        attributes "Main-Class": "xyz.shiqihao.MyApplication"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

bootJar {
    mainClassName = "xyz.shiqihao.MyApplication"
}
