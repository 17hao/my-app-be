plugins {
    id "java"
    id "com.google.protobuf" version "0.9.4"
}

def grpcVersion = "1.24.0"

dependencies {
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
}

protobuf {
    // Configure the protoc executable.
    protoc {
        // artifact = "com.google.protobuf:protoc:3.9.0:osx-x86_64" // Download from repositories.
        artifact = "com.google.protobuf:protoc:3.9.0" // Download from repositories.
        // path = "/usr/local/bin/protoc" // you may alse specify a local path.
    }
    // Locate the codegen plugin.
    plugins {
        grpc {
            // artifact = "io.grpc:protoc-gen-grpc-java:1.19.0:osx-x86_64"
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
            // or
            // path = ""
        }
    }

    // Customize code generation tasks.
    // Each code generation task has two collections:
    // - builtins: code generators built in protoc, e.g. java, python
    // - plugins: code generation plugin work with protoc, e.g. grpc
    generateProtoTasks {
        all().configureEach { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}
